@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<TechStudyUser> SignInManager
@inject UserManager<TechStudyUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User);

}
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a  class="nav-link " asp-page="/Account/Index" asp-route-id="@User.FindFirst(ClaimTypes.NameIdentifier)!.Value" title="Manage">@user.FirstName</a>
    </li>
    @if(User.HasClaim("Role", "Admin"))
    {   
        <li>
                <a class="nav-link " asp-page="/AccountsManager/Index">Accounts Manager</a>
        </li>
    }
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link ">Logout</button>
        </form>
    </li>
    
}
else
{
    @* <li class="nav-item">
            <a class="nav-link " asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li> *@
    <li class="nav-item signup">
        <a class="nav-link active text-dark " asp-area="Identity" asp-page="/Account/Login">Sign up</a>
    </li>
}
</ul>
